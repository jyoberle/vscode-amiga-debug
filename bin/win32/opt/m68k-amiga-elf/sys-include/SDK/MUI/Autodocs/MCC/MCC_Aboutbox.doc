TABLE OF CONTENTS

Aboutbox.mcc/Aboutbox.mcc
Aboutbox.mcc/MUIA_Aboutbox_Build
Aboutbox.mcc/MUIA_Aboutbox_Credits
Aboutbox.mcc/MUIA_Aboutbox_LogoData
Aboutbox.mcc/MUIA_Aboutbox_LogoFallback
Aboutbox.mcc/MUIA_Aboutbox_LogoFile
Aboutbox.mcc/Aboutbox.mcc

   Aboutbox.mcc was originally developed by Christian Rosentreter for MorphOS.
   This is a native reimplementation included in MUI3.9 for AmigaOS for
   convenience.

   Aboutbox.mcc is a MUI custom class that implements a non-modal information
   requester which displays various meta information about the application. The
   information include application name, description, version number, copyright
   and optionally credits or license details.

   One can use Aboutbox.mcc to provide an "About" window a standardized and
   uniform look across all applications. This also minimizes the required amount
   of work to implement such a window.

   Being a subclass of MUIC_Window certain attributes and methods can be applied
   to an Aboutbox.mcc object.

   To get the right look out of Aboutbox.mcc it is very important that
   the standard MUIA_Application_#? tags are properly filled in and are style
   conform. Aboutbox.mcc does some magic on them to retrieve the data
   it needs.


   EXAMPLE
       myapp = ApplicationObject,
           MUIA_Application_Title,       "AboutboxDemo",
           MUIA_Application_Version,     "$VER: AboutboxDemo 1.0 (01.01.2014)",
           MUIA_Application_Copyright,   "© 2014 Qwertzuiopü",
           MUIA_Application_Author,      "Qwertzuiopü",
           MUIA_Application_Description, "Demonstrates Aboutbox.mcc",
       ...


   NOTES
   It is not recommended to include copyright information in the version string
   passed to MUIA_Application_Version.
   The recommended style looks like this:

       $VER: app_title version.revision (DD.MM.YYYY)

   Year numbers with just 2 digits instead of 4 are accepted, but in general
   4 digits should be used nowadays. The app_title must be a single word without
   further spaces and there must be nothing else between the title and the
   version/revision pair. These must be numbers without leading zeroes.

   If an application was developed by more than a single person then comma
   separated list of names should be passed to  MUIA_Application_Author, i.e.
   "Qwertzuiopü, John Doe"
   The same applies for multiple copyrights.

   The copyright string should be a plain ISO Latin1 string and should not
   contain anything else than the copyright sign ('©', hexadecimal 0xa9) and the
   names of the authores. The copyright sign will automatically be converted to
   the literal string "Copyright ©" or its localized translation.
   Accepted formats are:

       "© year author1"
       "© year author1, author2"
       "© year author1, © year author2"
       "© year1-year2 author"
       and similar

   Instead a of single year a range like 2000-2014 can be used as well.
   There must be a space after the copyright sign and ahead of the year.

   Refer to the NewStuff demo source for more details.

Aboutbox.mcc/MUIA_Aboutbox_Build

   NAME
   MUIA_Aboutbox_Build -- [I..], CONST_STRPTR

   FUNCTION
   The application's build information. Useful if the project is managed by a
   revision control system like Subversion or Git. The build information is
   hidden by default, but becomes visible by clicking on the version number in
   the Aboutbox window.

Aboutbox.mcc/MUIA_Aboutbox_Credits

   NAME
   MUIA_Aboutbox_Credits -- [I..], STRPTR

   FUNCTION
   A optional extra credits list. These credits will be shown below the global
   application information. This must be a valid Latin1 string.

   IMPORTANT: Please note that the credits are just a list of categorized names. It
   is STRONGLY DISCOURAGED to add further detailed information to each name/ credit.
   The credits list is NOT a replacement for proper documentation for your application.
   In future Aboutbox.mcc will apply strong restrictions to the MUIA_Aboutbox_Credits
   string to allow advanced look and features. Anything that does not follow the
   required string format (see below) will very likely break and therefore be ignored
   completely - wrongly formated credits will not show up.


   Various placeholders can be used to insert certain fixed strings (or their
   localized translations):

       %p - 'Programming:'
       %P - 'Additional programming:'
       %l - 'Translations:'
       %L - 'Proofreading:'
       %t - 'Thanks to:'
       %T - 'Special thanks to:'
       %a - 'Acknowledgements:'
       %d - 'Documentation:'
       %i - 'Icons:'
       %I - 'Icon:'
       %W - 'Web support:'
       %m - 'Music:'
       %s - 'Sound Effects:'
       %g - 'Graphics:'
       %? - 'Disclaimer:'
       %§ - 'License:'
       %r - 'Registered To:'

   A literal percent sign must be escaped by a double percent sign ("%%").

   Tab characters (\t, hexadecimal 0x08) will replaced with 4 spaces. All normal
   MUI escaping sequences for formatting text can be used without limitation.
   Please respect a maximum line length of 40 characters to avoid a too wide
   window.

   EXAMPLE
       /* Note: Even if the example suggests it for demonstration purposes, it
        *       generally should be avoided to repeatedly add the name of the
        *       application's author to the different credit categories when it
        *       is already part of the MUIA_Application_Copyright string.
        */
       STATIC CONST_STRPTR credits =
            "\33b%p\33n\n"                 /* Programming: */
            "\tQwertzuiopü\n"
            "\n"
            "\33b%l\33n\n"                 /* Translation: */
            "\tQwertzuiopü\n"
            "\tJohn Doe\n"
            "\n"
            "\33b%t\33n\n"                 /* Thanks to:   */
            "\tMax Mustermann\n"
            "\tJohn Doe";

Aboutbox.mcc/MUIA_Aboutbox_LogoData

   NAME
   MUIA_Aboutbox_LogoData -- [I..], const struct MUI_RawimageData *

   FUNCTION
   A pointer to embedded logo data in MUI_RawimageData format (see Rawimage.mcc
   documentation for details). The logo image must be exactly 64x64 pixels.
   Other sizes are not supported.

   NOTES
   In general this attribute's use should be avoided unless it is absolutely
   necessary. The default logo image handling is sufficient in almost all cases
   and usually there is no need to override this mechanism.

   SEE ALSO
   MUIA_Aboutbox_LogoFallback, MUIA_Aboutbox_LogoFile,
   MUIA_Rawimage_Data

Aboutbox.mcc/MUIA_Aboutbox_LogoFallback

   NAME
   MUIA_Aboutbox_LogoFallback -- [I..], ULONG

   FUNCTION
   Specify the order in which the correct logo is obtained.

   Supported options:
   D - default application icon (usually PROGDIR:<application>.info)
   E - file specified with MUIA_Aboutbox_LogoFile
   I - data specified with MUIA_Aboutbox_LogoData

   Up to 3 options can be specified in any order using the MAKE_ID() macro from
   libraries/iffparse.h. The composed ID should be terminated with a NUL byte.

   Defaults to MUIV_Aboutbox_LogoFallbackMode_Auto.

   EXAMPLE
       /*  Let it first check for the application icon and if not
        *  available use an internal fallback logo.
        */
       aboutwindow = AboutboxObject,
           MUIA_Aboutbox_LogoFallback, MAKE_ID('D', 'I', '\0', '\0'),
           MUIA_Aboutbox_LogoData,     _internal_fallback_image_data,
       End;

   NOTES
   In general this attribute's use should be avoided unless it is absolutely
   necessary. The default logo image handling is sufficient in almost all cases
   and usually there is no need to override this mechanism.

   SEE ALSO
   MUIA_Aboutbox_LogoData, MUIA_Aboutbox_LogoFile

Aboutbox.mcc/MUIA_Aboutbox_LogoFile

   NAME
   MUIA_Aboutbox_LogoFile -- [I..], STRPTR

   FUNCTION
   Specify an alternative location to load the logo image from.

   The logo image must be exactly 64x64 pixels. Other sizes are not supported.

   The path must be an absolute path. Relative paths are not supported. This
   makes this attribute useful for fixed images in a standard system
   installation.

   NOTES
   In general this attribute's use should be avoided unless it is absolutely
   necessary. The default logo image handling is sufficient in almost all cases
   and usually there is no need to override this mechanism.

   SEE ALSO
   MUIA_Aboutbox_LogoFallback, MUIA_Aboutbox_LogoData
